@use '../widthBreakpoints';
@use '../heightBreakpoints';

nav.mainNav {
    --defaultWidth: 20vw;
    --paddingVertical: var(--borderRadiusSmall);
    --smallerSpacing: .25em;
    --buttonDefaultPadding: var(--smallerSpacing);
    --horizontalSpacing: calc(var(--smallerSpacing) * 3);
    --navBorderWidth: var(--borderWidthThick);


    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    border: var(--navBorderWidth) solid var(--blue);
    background-color: transparent;
    color: var(--lightblue);

    &>* {
        padding-left: var(--horizontalSpacing);
        padding-right: var(--horizontalSpacing);
    }
    
    .navTitles {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding-top: var(--smallerSpacing);
        padding-bottom: var(--smallerSpacing);
        background-image: linear-gradient(to bottom, var(--lightblue), transparent);
        
        --shadowColor: var(--pureblack);

        .mainHeader {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            font-family: 'Jockey One', Verdana, Geneva, Tahoma, sans-serif;
            font-size: var(--h3Size);
            color: var(--lightblue);

            margin: .2em 0;

            text-shadow: 
                1px 1px 0px var(--shadowColor),
                1px -1px 0px var(--shadowColor),
                -1px 1px 0px var(--shadowColor),
                -1px -1px 0px var(--shadowColor),
                
                2px 2px 0px var(--shadowColor),
                2px -2px 0px var(--shadowColor),
                -2px 2px 0px var(--shadowColor),
                -2px -2px 0px var(--shadowColor),

                3px 3px 0px var(--shadowColor),
                3px -3px 0px var(--shadowColor),
                -3px 3px 0px var(--shadowColor),
                -3px -3px 0px var(--shadowColor),
            ;
        }

        .auxHeader {
            font-size: var(--h4Size);
            align-self: flex-end;
            color: var(--defaultwhite);
            text-shadow: 
                1px 1px 0px var(--shadowColor),
                1px -1px 0px var(--shadowColor),
                -1px 1px 0px var(--shadowColor),
                -1px -1px 0px var(--shadowColor),
                
                2px 2px 0px var(--shadowColor),
                2px -2px 0px var(--shadowColor),
                -2px 2px 0px var(--shadowColor),
                -2px -2px 0px var(--shadowColor),
            ;
            text {
                fill: var(--defaultwhite);
                stroke: black;
                stroke-width: 1.5px;
                paint-order: stroke;
            }
        }
    }
    
    .navButtons {
        flex: 1;
        display: flex;
        flex-direction: row;
        gap: var(--paddingVertical);
        padding-top: var(--buttonDefaultPadding);
        padding-bottom: var(--buttonDefaultPadding);
    }
}

nav.campaignNav {
    --rotation: 70deg;
    --baseLength: 0px;
    --multiplyLength: 2rem;
    --lineWidth: 3px;
    --navLineHeight: calc(var(--lineWidth) * 20);

    --verticalHeight: calc(
        var(--navLineHeight) +
        (
            (var(--baseLength) + (var(--multiplyLength)*3)) 
            * 
            cos(
                var(--rotation) - 90deg
            )
        )
    );

    height: var(--verticalHeight);

    .mainBar {

        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        
        
        &>* {
            --isOdd: 1;
            &:nth-child(even) { --isOdd: 0; }
            --mod3: 1;
            &:nth-child(3n + 2) { --mod3: 3; }
            &:nth-child(3n + 3) { --mod3: 2; }
            &:nth-child(3n + 1) { --mod3: 1; }
            
            flex: 1;
            display: flex;
            align-items: center;
            height: var(--navLineHeight);
            z-index: var(--itemsLeft);
        }
    
        a {
            text-decoration: none;
        }
        
        .campaignLink {
            --lineColor: var(--blue);
            --lineStyle: var(--lineWidth) dashed;
            --textColor: var(--defaultwhite);
            border-bottom: var(--lineStyle) var(--lineColor);
            height: 0;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            text-align: center;
            color: var(--textColor);
            font-size: calc(var(--navLineHeight) * .5);
            z-index: 1;
    
            &.cap {
                display: flex;
                align-items: center;
                border: none;
    
                img {
                    position: relative;
                    height: var(--navLineHeight);
                    width: var(--navLineHeight);
                    object-fit: contain;
                }
    
                .buffer {
                    flex: 1;
                    border-bottom: var(--lineStyle) var(--lineColor);
                }
    
            }
    
            &.active {
                --textColor: var(--lgborange);
    
                .campaignLine { --lineColor: var(--lgborange); }
            }
    
            .campaignLine {
                --isEven: calc(1 - var(--isOdd));
    
                position: absolute;
                bottom: -10px;
                left: 50%;
                height: 100%;
                border-bottom: var(--lineStyle) var(--lineColor);
                transform-origin: bottom left;
                transform: rotate(var(--rotation));
                z-index: -1;
                line-height: 0;
    
                // line length
                width: calc(var(--baseLength) + (var(--multiplyLength) * var(--mod3)));
    
                .campaignLabelHolder {
                    position: absolute;
                    bottom: calc(-1 * var(--lineWidth));
                    right: 0;
                    width: 0;
                    transform-origin: bottom left;
                    transform: rotate(calc(-1 * var(--rotation)));
                    line-height: initial;
                    
                    .campaignLabel {
                        width: fit-content;
                        border-bottom: var(--lineStyle) var(--lineColor);
                        padding: .2em .6em;
                        inline-size: max-content;
                        font-size: calc(var(--pSize) - 4px);
                        color: var(--textColor);
                    }
                }
            }
        }
    }


}

// tablets and ipads and old pc monitors
@media (min-width: widthBreakpoints.$minTablet) {
    nav.mainNav {
        --paddingVertical: var(--borderRadiusLarge);
        --borderRadiusPadding: 2ch;
        flex-direction: row;
        padding: 0 var(--borderRadiusPadding);
        border-radius: 0 0 var(--borderRadiusLarge) var(--borderRadiusLarge);

        .navTitles {
            width: var(--defaultWidth);
            background-image: none;
            gap: var(--smallerSpacing);
            padding: 0;
            text-align: left;
            
            &>* {
                background-color: var(--lightbluetransparent);
                margin: 0 !important;
                padding: var(--smallerSpacing);
                box-sizing: border-box;
            }

            .mainHeader {
                // flex: 1;
                width: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .auxHeader {
                align-self: auto;
                width: 100%;
                font-size: 14px;
            }
        }

        .navButtons {
            padding: var(--paddingVertical) 0 var(--paddingVertical) var(--borderRadiusPadding);
        }
    }
}

// desktops
@media (min-width: widthBreakpoints.$minDesktop) {
    nav.mainNav {
        --paddingVertical: calc(var(--borderRadiusSmall) / 2);

        padding: 0 0 var(--paddingVertical);
        border-radius: var(--borderRadiusLarge) 0 0 var(--borderRadiusLarge);
        flex-direction: column;
        align-items: flex-start;
        width: 15vw;
        height: 100%;
        overflow: hidden;

        .navTitles {
            width: 100%;
            min-height: calc(var(--headerHeight) - var(--navBorderWidth));
            padding: var(--paddingVertical) 0 var(--paddingVertical);
            box-sizing: border-box;
            justify-content: flex-start;

            * {
                text-align: left;
                justify-content: left !important;
            }

            .auxHeader {
                font-size: var(--pSize);
            }
        }

        .navButtons {
            flex: 1;
            width: 100%;
            flex-direction: column;
            padding: 0 var(--paddingVertical);
            box-sizing: border-box;
            justify-content: space-between;

            &>* {
                flex: 1;
                flex-direction: row;
            }
        }
    }
}

@media (min-width: 1120px) {
    nav.mainNav {
        --paddingVertical: var(--borderRadiusSmall);

        .navTitles .auxHeader {
            font-size: var(--h5Size);
        }
    } 
}